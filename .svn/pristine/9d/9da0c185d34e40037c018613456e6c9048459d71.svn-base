package model;

import java.util.Map;

public class Car extends AbstractVehicle {
    
    private static final int DEATH_TIME = 15;
    
    private Direction myDirection;
    
    public Car(final int theX, final int theY, final Direction theDirection) {
        super(theX, theY, theDirection, DEATH_TIME);
        myDirection = theDirection;
    }
    
    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        boolean canPass = false;
        if ((theTerrain == Terrain.STREET) || (theTerrain == Terrain.CROSSWALK)) {
            canPass = true;
        } else if (theTerrain == Terrain.LIGHT && (theLight != Light.RED
                        || theLight != Light.YELLOW)) {
            canPass = true;
        }
        return canPass;
    }
    
    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        if ((theNeighbors.get(getDirection()) == Terrain.STREET)
                        || (theNeighbors.get(getDirection()) == Terrain.LIGHT)) {
            myDirection = getDirection();
        } else if ((theNeighbors.get(getDirection().left()) == Terrain.STREET)
                        || (theNeighbors.get(getDirection().left()) == Terrain.LIGHT)) {
            myDirection = getDirection().left();
        } else if ((theNeighbors.get(getDirection().right()) == Terrain.STREET)
                        || (theNeighbors.get(getDirection().right()) == Terrain.LIGHT)) {
            myDirection = getDirection().right();
        } else {
            myDirection = getDirection().reverse();
        }
        return myDirection;
    }
}
